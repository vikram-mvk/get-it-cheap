UserRoutes

	/signin [POST, unprotected]
		
		Request Params:
			{
				"email":"demo email",
				"password":"demo password"
			}
		
		Email must be provided.
		Password must be provided
		
		Response: Jwt token
	
	
	/signup [POST, unprotected]
	
		Request Params:
			{
				"firstName":"demo FirstName",
				"lastName":"demo lastName",
				"email":"demo email",
				"password":"demo password"
			}
		
		All Fields are required
		
		Response: status 200 with message "Signup successful"
		
		
ItemRoutes


	/items [GET, unprotected] ? category=string?cost=int?rentabl_basis=string?
	
		Request Params: None. (When implementing filters use Url query string)
		
		Response: returns all items
		{
			"itemName" : "",
			"description":"",
			"category":"",
			"model":"", optional
			"price":int,
			"rentalBasis": per_hour, per_day, per_week, per_month
			"itemType" string [rent or sell]
			"deposit" : int, optional
			"image": multipart data, optional
			"userId":"",
			"city":"",
			"country":"",
			"state":"",
			"pincode":int,
			"createdAt":"",
			"tags":"" optional,
			"userName":""
		}
		
		itemName and Description -> Search
		everything else other other image -> Filtering
		
	/item/{id} [GET, unprotected]
		
		Request Params: None.
		Response: returns item based on the Id


	/item [POST, protected] -> create a new item
	
		Request Params: 
		
		{
			"itemName" : "",
			"description":"",
			"category":"",
			"model":"", optional
			"price":int,
			"rentalBasis": per_hour, per_day, per_week, per_month
			"itemType" string [rent or sell]
			"deposit" : int, optional
			"image": multipart data, optional
			"userId":"",
			"city":"",
			"country":"",
			"state":"",
			"pincode":int,
			"createdAt":"",
			"tags":"" optional,
			"contact":"",
			"userName":""
			
		}
		
	/items/{userId} [GET, protected] -> get the items posted by a specific user
	
		returns items based on username
		
